version: 0.2

phases:
  pre_build:
    commands: 
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION  | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
      # Install kubectl (if not already installed in your CodeBuild image)
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - mkdir -p ~/.kube
      # Authenticate kubectl with EKS cluster
      - echo "Authenticating kubectl with EKS cluster..."
      - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION  --name $CLUSTER_NAME
  build:
    commands:
      # - docker build -t $MEDI_TRACK_ECR_REPOSITORY -f ./medi-track-2417924-20240485/Dockerfile ./medi-track-2417924-20240485
      # - docker tag $MEDI_TRACK_ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$MEDI_TRACK_ECR_REPOSITORY:latest

      # - docker build -t $PATIENT_RECORD_ECR_REPOSITORY -f ./patient-record-service/Dockerfile ./patient-record-service
      # - docker tag $PATIENT_RECORD_ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$PATIENT_RECORD_ECR_REPOSITORY:latest

      # - docker build -t $APPOINTMENTS_ECR_REPOSITORY -f ./appointment-scheduling-service/Dockerfile ./appointment-scheduling-service
      # - docker tag $APPOINTMENTS_ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$APPOINTMENTS_ECR_REPOSITORY:latest

      # - docker build -t $NOTIFICATION_ECR_REPOSITORY -f ./notification-service/Dockerfile ./notification-service
      # - docker tag $NOTIFICATION_ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$NOTIFICATION_ECR_REPOSITORY:latest

      # - docker build -t $FILE_HANDLER_ECR_REPOSITORY -f ./file-handler/Dockerfile ./file-handler
      # - docker tag $FILE_HANDLER_ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$FILE_HANDLER_ECR_REPOSITORY:latest
     
      - docker build -t $CRON_JOBS_ECR_REPOSITORY -f ./cron-jobs/Dockerfile ./cron-jobs
      - docker tag $CRON_JOBS_ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$CRON_JOBS_ECR_REPOSITORY:latest


  post_build: 
    commands:
      # - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$MEDI_TRACK_ECR_REPOSITORY:latest
      # - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$APPOINTMENTS_ECR_REPOSITORY:latest
      # - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$PATIENT_RECORD_ECR_REPOSITORY:latest
      # - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$FILE_HANDLER_ECR_REPOSITORY:latest
      # - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$NOTIFICATION_ECR_REPOSITORY:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$CRON_JOBS_ECR_REPOSITORY:latest
      # Run end-to-end tests for medi-track-gateway
      # - echo "Running end-to-end tests for medi-track-gateway..."
      # - cd ./medi-track-2417924-20240485
      # - npm install
      # - |
      #     echo "End-to-end tests passed. Updating Kubernetes deployment..."
      #     kubectl set image deployment/medi-track-gateway medi-track-gateway-container=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/medi-track-gateway:latest
      #     echo "Verifying rollout status..."
      #     kubectl rollout status deployment/medi-track-gateway
      # - kubectl set image deployment/$MEDI_TRACK_DEPLOYMENT_NAME $MEDI_TRACK_ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$MEDI_TRACK_ECR_REPOSITORY:latest
      # - kubectl rollout status deployment/$MEDI_TRACK_DEPLOYMENT_NAME
      # - kubectl set image deployment/$PATIENT_RECORD_DEPLOYMENT_NAME $PATIENT_RECORD_ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$PATIENT_RECORD_ECR_REPOSITORY:latest
      # - kubectl rollout status deployment/$PATIENT_RECORD_DEPLOYMENT_NAME
      # - kubectl set image deployment/$APPOINTMENTS_DEPLOYMENT_NAME $APPOINTMENTS_ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$APPOINTMENTS_ECR_REPOSITORY:latest
      # - kubectl rollout status deployment/$APPOINTMENTS_DEPLOYMENT_NAME
      # - kubectl set image deployment/$NOTIFICATION_DEPLOYMENT_NAME $NOTIFICATION_ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$NOTIFICATION_ECR_REPOSITORY:latest
      # - kubectl rollout status deployment/$NOTIFICATION_DEPLOYMENT_NAME
      # - kubectl set image deployment/$FILE_HANDLER_DEPLOYMENT_NAME $FILE_HANDLER_ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$FILE_HANDLER_ECR_REPOSITORY:latest
      # - kubectl rollout status deployment/$FILE_HANDLER_DEPLOYMENT_NAME
      - kubectl set image deployment/$CRON_JOBS_APPOINTMENT_RECORD_DEPLOYMENT_NAME $CRON_JOBS_ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$CRON_JOBS_ECR_REPOSITORY:latest
      - kubectl rollout status deployment/$CRON_JOBS_APPOINTMENT_RECORD_DEPLOYMENT_NAME
      - kubectl set image deployment/$CRON_JOBS_DOCTOR_RECORD_DEPLOYMENT_NAME $CRON_JOBS_ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$CRON_JOBS_ECR_REPOSITORY:latest
      - kubectl rollout status deployment/$CRON_JOBS_DOCTOR_RECORD_DEPLOYMENT_NAME
      - kubectl set image deployment/$CRON_JOBS_DISEASE_SUMMARY_DEPLOYMENT_NAME $CRON_JOBS_ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$CRON_JOBS_ECR_REPOSITORY:latest
      - kubectl rollout status deployment/$CRON_JOBS_DISEASE_SUMMARY_DEPLOYMENT_NAME
env:
  variables:
    AWS_ACCOUNT_ID: "061051254585"
    AWS_DEFAULT_REGION: "us-east-1"
    CLUSTER_NAME: "medi-track"
    MEDI_TRACK_ECR_REPOSITORY: "medi-track-gateway"
    MEDI_TRACK_DEPLOYMENT_NAME: "medi-track-gateway-blue"
    PATIENT_RECORD_ECR_REPOSITORY: "patient-record-service"
    PATIENT_RECORD_DEPLOYMENT_NAME: "patient-record-blue"
    APPOINTMENTS_ECR_REPOSITORY: "appointment-scheduling"
    APPOINTMENTS_DEPLOYMENT_NAME: "appointment-scheduling-blue"
    NOTIFICATION_ECR_REPOSITORY: "notification"
    NOTIFICATION_DEPLOYMENT_NAME: "notification-service-blue"
    FILE_HANDLER_ECR_REPOSITORY: "file-handler"
    FILE_HANDLER_DEPLOYMENT_NAME: "file-handler-blue"
    CRON_JOBS_ECR_REPOSITORY: "medi-track-cron-jobs"
    CRON_JOBS_APPOINTMENT_RECORD_DEPLOYMENT_NAME: "appointment-records-job-blue"
    CRON_JOBS_DOCTOR_RECORD_DEPLOYMENT_NAME: "appointments-per-doctor-job-blue"
    CRON_JOBS_DISEASE_SUMMARY_DEPLOYMENT_NAME: "disease-summary-job-blue"